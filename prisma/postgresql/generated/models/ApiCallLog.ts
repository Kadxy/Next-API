
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ApiCallLog` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ApiCallLog
 * 
 */
export type ApiCallLogModel = runtime.Types.Result.DefaultSelection<Prisma.$ApiCallLogPayload>

export type AggregateApiCallLog = {
  _count: ApiCallLogCountAggregateOutputType | null
  _avg: ApiCallLogAvgAggregateOutputType | null
  _sum: ApiCallLogSumAggregateOutputType | null
  _min: ApiCallLogMinAggregateOutputType | null
  _max: ApiCallLogMaxAggregateOutputType | null
}

export type ApiCallLogAvgAggregateOutputType = {
  statusCode: number | null
}

export type ApiCallLogSumAggregateOutputType = {
  statusCode: number | null
}

export type ApiCallLogMinAggregateOutputType = {
  requestId: string | null
  requestPath: string | null
  responseText: string | null
  statusCode: number | null
  errorMessage: string | null
  errorStack: string | null
  createdAt: Date | null
}

export type ApiCallLogMaxAggregateOutputType = {
  requestId: string | null
  requestPath: string | null
  responseText: string | null
  statusCode: number | null
  errorMessage: string | null
  errorStack: string | null
  createdAt: Date | null
}

export type ApiCallLogCountAggregateOutputType = {
  requestId: number
  requestPath: number
  requestBody: number
  responseBody: number
  responseText: number
  statusCode: number
  errorMessage: number
  errorStack: number
  headers: number
  metadata: number
  createdAt: number
  _all: number
}


export type ApiCallLogAvgAggregateInputType = {
  statusCode?: true
}

export type ApiCallLogSumAggregateInputType = {
  statusCode?: true
}

export type ApiCallLogMinAggregateInputType = {
  requestId?: true
  requestPath?: true
  responseText?: true
  statusCode?: true
  errorMessage?: true
  errorStack?: true
  createdAt?: true
}

export type ApiCallLogMaxAggregateInputType = {
  requestId?: true
  requestPath?: true
  responseText?: true
  statusCode?: true
  errorMessage?: true
  errorStack?: true
  createdAt?: true
}

export type ApiCallLogCountAggregateInputType = {
  requestId?: true
  requestPath?: true
  requestBody?: true
  responseBody?: true
  responseText?: true
  statusCode?: true
  errorMessage?: true
  errorStack?: true
  headers?: true
  metadata?: true
  createdAt?: true
  _all?: true
}

export type ApiCallLogAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ApiCallLog to aggregate.
   */
  where?: Prisma.ApiCallLogWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ApiCallLogs to fetch.
   */
  orderBy?: Prisma.ApiCallLogOrderByWithRelationInput | Prisma.ApiCallLogOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ApiCallLogWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ApiCallLogs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ApiCallLogs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ApiCallLogs
  **/
  _count?: true | ApiCallLogCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ApiCallLogAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ApiCallLogSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ApiCallLogMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ApiCallLogMaxAggregateInputType
}

export type GetApiCallLogAggregateType<T extends ApiCallLogAggregateArgs> = {
      [P in keyof T & keyof AggregateApiCallLog]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateApiCallLog[P]>
    : Prisma.GetScalarType<T[P], AggregateApiCallLog[P]>
}




export type ApiCallLogGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ApiCallLogWhereInput
  orderBy?: Prisma.ApiCallLogOrderByWithAggregationInput | Prisma.ApiCallLogOrderByWithAggregationInput[]
  by: Prisma.ApiCallLogScalarFieldEnum[] | Prisma.ApiCallLogScalarFieldEnum
  having?: Prisma.ApiCallLogScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ApiCallLogCountAggregateInputType | true
  _avg?: ApiCallLogAvgAggregateInputType
  _sum?: ApiCallLogSumAggregateInputType
  _min?: ApiCallLogMinAggregateInputType
  _max?: ApiCallLogMaxAggregateInputType
}

export type ApiCallLogGroupByOutputType = {
  requestId: string
  requestPath: string
  requestBody: runtime.JsonValue
  responseBody: runtime.JsonValue | null
  responseText: string | null
  statusCode: number | null
  errorMessage: string | null
  errorStack: string | null
  headers: runtime.JsonValue | null
  metadata: runtime.JsonValue | null
  createdAt: Date
  _count: ApiCallLogCountAggregateOutputType | null
  _avg: ApiCallLogAvgAggregateOutputType | null
  _sum: ApiCallLogSumAggregateOutputType | null
  _min: ApiCallLogMinAggregateOutputType | null
  _max: ApiCallLogMaxAggregateOutputType | null
}

type GetApiCallLogGroupByPayload<T extends ApiCallLogGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ApiCallLogGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ApiCallLogGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ApiCallLogGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ApiCallLogGroupByOutputType[P]>
      }
    >
  > 



export type ApiCallLogWhereInput = {
  AND?: Prisma.ApiCallLogWhereInput | Prisma.ApiCallLogWhereInput[]
  OR?: Prisma.ApiCallLogWhereInput[]
  NOT?: Prisma.ApiCallLogWhereInput | Prisma.ApiCallLogWhereInput[]
  requestId?: Prisma.StringFilter<"ApiCallLog"> | string
  requestPath?: Prisma.StringFilter<"ApiCallLog"> | string
  requestBody?: Prisma.JsonFilter<"ApiCallLog">
  responseBody?: Prisma.JsonNullableFilter<"ApiCallLog">
  responseText?: Prisma.StringNullableFilter<"ApiCallLog"> | string | null
  statusCode?: Prisma.IntNullableFilter<"ApiCallLog"> | number | null
  errorMessage?: Prisma.StringNullableFilter<"ApiCallLog"> | string | null
  errorStack?: Prisma.StringNullableFilter<"ApiCallLog"> | string | null
  headers?: Prisma.JsonNullableFilter<"ApiCallLog">
  metadata?: Prisma.JsonNullableFilter<"ApiCallLog">
  createdAt?: Prisma.DateTimeFilter<"ApiCallLog"> | Date | string
}

export type ApiCallLogOrderByWithRelationInput = {
  requestId?: Prisma.SortOrder
  requestPath?: Prisma.SortOrder
  requestBody?: Prisma.SortOrder
  responseBody?: Prisma.SortOrderInput | Prisma.SortOrder
  responseText?: Prisma.SortOrderInput | Prisma.SortOrder
  statusCode?: Prisma.SortOrderInput | Prisma.SortOrder
  errorMessage?: Prisma.SortOrderInput | Prisma.SortOrder
  errorStack?: Prisma.SortOrderInput | Prisma.SortOrder
  headers?: Prisma.SortOrderInput | Prisma.SortOrder
  metadata?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type ApiCallLogWhereUniqueInput = Prisma.AtLeast<{
  requestId?: string
  AND?: Prisma.ApiCallLogWhereInput | Prisma.ApiCallLogWhereInput[]
  OR?: Prisma.ApiCallLogWhereInput[]
  NOT?: Prisma.ApiCallLogWhereInput | Prisma.ApiCallLogWhereInput[]
  requestPath?: Prisma.StringFilter<"ApiCallLog"> | string
  requestBody?: Prisma.JsonFilter<"ApiCallLog">
  responseBody?: Prisma.JsonNullableFilter<"ApiCallLog">
  responseText?: Prisma.StringNullableFilter<"ApiCallLog"> | string | null
  statusCode?: Prisma.IntNullableFilter<"ApiCallLog"> | number | null
  errorMessage?: Prisma.StringNullableFilter<"ApiCallLog"> | string | null
  errorStack?: Prisma.StringNullableFilter<"ApiCallLog"> | string | null
  headers?: Prisma.JsonNullableFilter<"ApiCallLog">
  metadata?: Prisma.JsonNullableFilter<"ApiCallLog">
  createdAt?: Prisma.DateTimeFilter<"ApiCallLog"> | Date | string
}, "requestId">

export type ApiCallLogOrderByWithAggregationInput = {
  requestId?: Prisma.SortOrder
  requestPath?: Prisma.SortOrder
  requestBody?: Prisma.SortOrder
  responseBody?: Prisma.SortOrderInput | Prisma.SortOrder
  responseText?: Prisma.SortOrderInput | Prisma.SortOrder
  statusCode?: Prisma.SortOrderInput | Prisma.SortOrder
  errorMessage?: Prisma.SortOrderInput | Prisma.SortOrder
  errorStack?: Prisma.SortOrderInput | Prisma.SortOrder
  headers?: Prisma.SortOrderInput | Prisma.SortOrder
  metadata?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.ApiCallLogCountOrderByAggregateInput
  _avg?: Prisma.ApiCallLogAvgOrderByAggregateInput
  _max?: Prisma.ApiCallLogMaxOrderByAggregateInput
  _min?: Prisma.ApiCallLogMinOrderByAggregateInput
  _sum?: Prisma.ApiCallLogSumOrderByAggregateInput
}

export type ApiCallLogScalarWhereWithAggregatesInput = {
  AND?: Prisma.ApiCallLogScalarWhereWithAggregatesInput | Prisma.ApiCallLogScalarWhereWithAggregatesInput[]
  OR?: Prisma.ApiCallLogScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ApiCallLogScalarWhereWithAggregatesInput | Prisma.ApiCallLogScalarWhereWithAggregatesInput[]
  requestId?: Prisma.StringWithAggregatesFilter<"ApiCallLog"> | string
  requestPath?: Prisma.StringWithAggregatesFilter<"ApiCallLog"> | string
  requestBody?: Prisma.JsonWithAggregatesFilter<"ApiCallLog">
  responseBody?: Prisma.JsonNullableWithAggregatesFilter<"ApiCallLog">
  responseText?: Prisma.StringNullableWithAggregatesFilter<"ApiCallLog"> | string | null
  statusCode?: Prisma.IntNullableWithAggregatesFilter<"ApiCallLog"> | number | null
  errorMessage?: Prisma.StringNullableWithAggregatesFilter<"ApiCallLog"> | string | null
  errorStack?: Prisma.StringNullableWithAggregatesFilter<"ApiCallLog"> | string | null
  headers?: Prisma.JsonNullableWithAggregatesFilter<"ApiCallLog">
  metadata?: Prisma.JsonNullableWithAggregatesFilter<"ApiCallLog">
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ApiCallLog"> | Date | string
}

export type ApiCallLogCreateInput = {
  requestId: string
  requestPath: string
  requestBody: Prisma.JsonNullValueInput | runtime.InputJsonValue
  responseBody?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  responseText?: string | null
  statusCode?: number | null
  errorMessage?: string | null
  errorStack?: string | null
  headers?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
}

export type ApiCallLogUncheckedCreateInput = {
  requestId: string
  requestPath: string
  requestBody: Prisma.JsonNullValueInput | runtime.InputJsonValue
  responseBody?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  responseText?: string | null
  statusCode?: number | null
  errorMessage?: string | null
  errorStack?: string | null
  headers?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
}

export type ApiCallLogUpdateInput = {
  requestId?: Prisma.StringFieldUpdateOperationsInput | string
  requestPath?: Prisma.StringFieldUpdateOperationsInput | string
  requestBody?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  responseBody?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  responseText?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  statusCode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorStack?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  headers?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ApiCallLogUncheckedUpdateInput = {
  requestId?: Prisma.StringFieldUpdateOperationsInput | string
  requestPath?: Prisma.StringFieldUpdateOperationsInput | string
  requestBody?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  responseBody?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  responseText?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  statusCode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorStack?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  headers?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ApiCallLogCreateManyInput = {
  requestId: string
  requestPath: string
  requestBody: Prisma.JsonNullValueInput | runtime.InputJsonValue
  responseBody?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  responseText?: string | null
  statusCode?: number | null
  errorMessage?: string | null
  errorStack?: string | null
  headers?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
}

export type ApiCallLogUpdateManyMutationInput = {
  requestId?: Prisma.StringFieldUpdateOperationsInput | string
  requestPath?: Prisma.StringFieldUpdateOperationsInput | string
  requestBody?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  responseBody?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  responseText?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  statusCode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorStack?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  headers?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ApiCallLogUncheckedUpdateManyInput = {
  requestId?: Prisma.StringFieldUpdateOperationsInput | string
  requestPath?: Prisma.StringFieldUpdateOperationsInput | string
  requestBody?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  responseBody?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  responseText?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  statusCode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorStack?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  headers?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ApiCallLogCountOrderByAggregateInput = {
  requestId?: Prisma.SortOrder
  requestPath?: Prisma.SortOrder
  requestBody?: Prisma.SortOrder
  responseBody?: Prisma.SortOrder
  responseText?: Prisma.SortOrder
  statusCode?: Prisma.SortOrder
  errorMessage?: Prisma.SortOrder
  errorStack?: Prisma.SortOrder
  headers?: Prisma.SortOrder
  metadata?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type ApiCallLogAvgOrderByAggregateInput = {
  statusCode?: Prisma.SortOrder
}

export type ApiCallLogMaxOrderByAggregateInput = {
  requestId?: Prisma.SortOrder
  requestPath?: Prisma.SortOrder
  responseText?: Prisma.SortOrder
  statusCode?: Prisma.SortOrder
  errorMessage?: Prisma.SortOrder
  errorStack?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type ApiCallLogMinOrderByAggregateInput = {
  requestId?: Prisma.SortOrder
  requestPath?: Prisma.SortOrder
  responseText?: Prisma.SortOrder
  statusCode?: Prisma.SortOrder
  errorMessage?: Prisma.SortOrder
  errorStack?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type ApiCallLogSumOrderByAggregateInput = {
  statusCode?: Prisma.SortOrder
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}



export type ApiCallLogSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  requestId?: boolean
  requestPath?: boolean
  requestBody?: boolean
  responseBody?: boolean
  responseText?: boolean
  statusCode?: boolean
  errorMessage?: boolean
  errorStack?: boolean
  headers?: boolean
  metadata?: boolean
  createdAt?: boolean
}, ExtArgs["result"]["apiCallLog"]>

export type ApiCallLogSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  requestId?: boolean
  requestPath?: boolean
  requestBody?: boolean
  responseBody?: boolean
  responseText?: boolean
  statusCode?: boolean
  errorMessage?: boolean
  errorStack?: boolean
  headers?: boolean
  metadata?: boolean
  createdAt?: boolean
}, ExtArgs["result"]["apiCallLog"]>

export type ApiCallLogSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  requestId?: boolean
  requestPath?: boolean
  requestBody?: boolean
  responseBody?: boolean
  responseText?: boolean
  statusCode?: boolean
  errorMessage?: boolean
  errorStack?: boolean
  headers?: boolean
  metadata?: boolean
  createdAt?: boolean
}, ExtArgs["result"]["apiCallLog"]>

export type ApiCallLogSelectScalar = {
  requestId?: boolean
  requestPath?: boolean
  requestBody?: boolean
  responseBody?: boolean
  responseText?: boolean
  statusCode?: boolean
  errorMessage?: boolean
  errorStack?: boolean
  headers?: boolean
  metadata?: boolean
  createdAt?: boolean
}

export type ApiCallLogOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"requestId" | "requestPath" | "requestBody" | "responseBody" | "responseText" | "statusCode" | "errorMessage" | "errorStack" | "headers" | "metadata" | "createdAt", ExtArgs["result"]["apiCallLog"]>

export type $ApiCallLogPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ApiCallLog"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    requestId: string
    requestPath: string
    requestBody: runtime.JsonValue
    responseBody: runtime.JsonValue | null
    responseText: string | null
    statusCode: number | null
    errorMessage: string | null
    errorStack: string | null
    headers: runtime.JsonValue | null
    metadata: runtime.JsonValue | null
    createdAt: Date
  }, ExtArgs["result"]["apiCallLog"]>
  composites: {}
}

export type ApiCallLogGetPayload<S extends boolean | null | undefined | ApiCallLogDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ApiCallLogPayload, S>

export type ApiCallLogCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ApiCallLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ApiCallLogCountAggregateInputType | true
  }

export interface ApiCallLogDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ApiCallLog'], meta: { name: 'ApiCallLog' } }
  /**
   * Find zero or one ApiCallLog that matches the filter.
   * @param {ApiCallLogFindUniqueArgs} args - Arguments to find a ApiCallLog
   * @example
   * // Get one ApiCallLog
   * const apiCallLog = await prisma.apiCallLog.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ApiCallLogFindUniqueArgs>(args: Prisma.SelectSubset<T, ApiCallLogFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ApiCallLogClient<runtime.Types.Result.GetResult<Prisma.$ApiCallLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ApiCallLog that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ApiCallLogFindUniqueOrThrowArgs} args - Arguments to find a ApiCallLog
   * @example
   * // Get one ApiCallLog
   * const apiCallLog = await prisma.apiCallLog.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ApiCallLogFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ApiCallLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ApiCallLogClient<runtime.Types.Result.GetResult<Prisma.$ApiCallLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ApiCallLog that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiCallLogFindFirstArgs} args - Arguments to find a ApiCallLog
   * @example
   * // Get one ApiCallLog
   * const apiCallLog = await prisma.apiCallLog.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ApiCallLogFindFirstArgs>(args?: Prisma.SelectSubset<T, ApiCallLogFindFirstArgs<ExtArgs>>): Prisma.Prisma__ApiCallLogClient<runtime.Types.Result.GetResult<Prisma.$ApiCallLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ApiCallLog that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiCallLogFindFirstOrThrowArgs} args - Arguments to find a ApiCallLog
   * @example
   * // Get one ApiCallLog
   * const apiCallLog = await prisma.apiCallLog.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ApiCallLogFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ApiCallLogFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ApiCallLogClient<runtime.Types.Result.GetResult<Prisma.$ApiCallLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ApiCallLogs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiCallLogFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ApiCallLogs
   * const apiCallLogs = await prisma.apiCallLog.findMany()
   * 
   * // Get first 10 ApiCallLogs
   * const apiCallLogs = await prisma.apiCallLog.findMany({ take: 10 })
   * 
   * // Only select the `requestId`
   * const apiCallLogWithRequestIdOnly = await prisma.apiCallLog.findMany({ select: { requestId: true } })
   * 
   */
  findMany<T extends ApiCallLogFindManyArgs>(args?: Prisma.SelectSubset<T, ApiCallLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ApiCallLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ApiCallLog.
   * @param {ApiCallLogCreateArgs} args - Arguments to create a ApiCallLog.
   * @example
   * // Create one ApiCallLog
   * const ApiCallLog = await prisma.apiCallLog.create({
   *   data: {
   *     // ... data to create a ApiCallLog
   *   }
   * })
   * 
   */
  create<T extends ApiCallLogCreateArgs>(args: Prisma.SelectSubset<T, ApiCallLogCreateArgs<ExtArgs>>): Prisma.Prisma__ApiCallLogClient<runtime.Types.Result.GetResult<Prisma.$ApiCallLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ApiCallLogs.
   * @param {ApiCallLogCreateManyArgs} args - Arguments to create many ApiCallLogs.
   * @example
   * // Create many ApiCallLogs
   * const apiCallLog = await prisma.apiCallLog.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ApiCallLogCreateManyArgs>(args?: Prisma.SelectSubset<T, ApiCallLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ApiCallLogs and returns the data saved in the database.
   * @param {ApiCallLogCreateManyAndReturnArgs} args - Arguments to create many ApiCallLogs.
   * @example
   * // Create many ApiCallLogs
   * const apiCallLog = await prisma.apiCallLog.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ApiCallLogs and only return the `requestId`
   * const apiCallLogWithRequestIdOnly = await prisma.apiCallLog.createManyAndReturn({
   *   select: { requestId: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ApiCallLogCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ApiCallLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ApiCallLogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ApiCallLog.
   * @param {ApiCallLogDeleteArgs} args - Arguments to delete one ApiCallLog.
   * @example
   * // Delete one ApiCallLog
   * const ApiCallLog = await prisma.apiCallLog.delete({
   *   where: {
   *     // ... filter to delete one ApiCallLog
   *   }
   * })
   * 
   */
  delete<T extends ApiCallLogDeleteArgs>(args: Prisma.SelectSubset<T, ApiCallLogDeleteArgs<ExtArgs>>): Prisma.Prisma__ApiCallLogClient<runtime.Types.Result.GetResult<Prisma.$ApiCallLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ApiCallLog.
   * @param {ApiCallLogUpdateArgs} args - Arguments to update one ApiCallLog.
   * @example
   * // Update one ApiCallLog
   * const apiCallLog = await prisma.apiCallLog.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ApiCallLogUpdateArgs>(args: Prisma.SelectSubset<T, ApiCallLogUpdateArgs<ExtArgs>>): Prisma.Prisma__ApiCallLogClient<runtime.Types.Result.GetResult<Prisma.$ApiCallLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ApiCallLogs.
   * @param {ApiCallLogDeleteManyArgs} args - Arguments to filter ApiCallLogs to delete.
   * @example
   * // Delete a few ApiCallLogs
   * const { count } = await prisma.apiCallLog.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ApiCallLogDeleteManyArgs>(args?: Prisma.SelectSubset<T, ApiCallLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ApiCallLogs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiCallLogUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ApiCallLogs
   * const apiCallLog = await prisma.apiCallLog.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ApiCallLogUpdateManyArgs>(args: Prisma.SelectSubset<T, ApiCallLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ApiCallLogs and returns the data updated in the database.
   * @param {ApiCallLogUpdateManyAndReturnArgs} args - Arguments to update many ApiCallLogs.
   * @example
   * // Update many ApiCallLogs
   * const apiCallLog = await prisma.apiCallLog.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ApiCallLogs and only return the `requestId`
   * const apiCallLogWithRequestIdOnly = await prisma.apiCallLog.updateManyAndReturn({
   *   select: { requestId: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ApiCallLogUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ApiCallLogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ApiCallLogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ApiCallLog.
   * @param {ApiCallLogUpsertArgs} args - Arguments to update or create a ApiCallLog.
   * @example
   * // Update or create a ApiCallLog
   * const apiCallLog = await prisma.apiCallLog.upsert({
   *   create: {
   *     // ... data to create a ApiCallLog
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ApiCallLog we want to update
   *   }
   * })
   */
  upsert<T extends ApiCallLogUpsertArgs>(args: Prisma.SelectSubset<T, ApiCallLogUpsertArgs<ExtArgs>>): Prisma.Prisma__ApiCallLogClient<runtime.Types.Result.GetResult<Prisma.$ApiCallLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ApiCallLogs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiCallLogCountArgs} args - Arguments to filter ApiCallLogs to count.
   * @example
   * // Count the number of ApiCallLogs
   * const count = await prisma.apiCallLog.count({
   *   where: {
   *     // ... the filter for the ApiCallLogs we want to count
   *   }
   * })
  **/
  count<T extends ApiCallLogCountArgs>(
    args?: Prisma.Subset<T, ApiCallLogCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ApiCallLogCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ApiCallLog.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiCallLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ApiCallLogAggregateArgs>(args: Prisma.Subset<T, ApiCallLogAggregateArgs>): Prisma.PrismaPromise<GetApiCallLogAggregateType<T>>

  /**
   * Group by ApiCallLog.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiCallLogGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ApiCallLogGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ApiCallLogGroupByArgs['orderBy'] }
      : { orderBy?: ApiCallLogGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ApiCallLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApiCallLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ApiCallLog model
 */
readonly fields: ApiCallLogFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ApiCallLog.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ApiCallLogClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ApiCallLog model
 */
export interface ApiCallLogFieldRefs {
  readonly requestId: Prisma.FieldRef<"ApiCallLog", 'String'>
  readonly requestPath: Prisma.FieldRef<"ApiCallLog", 'String'>
  readonly requestBody: Prisma.FieldRef<"ApiCallLog", 'Json'>
  readonly responseBody: Prisma.FieldRef<"ApiCallLog", 'Json'>
  readonly responseText: Prisma.FieldRef<"ApiCallLog", 'String'>
  readonly statusCode: Prisma.FieldRef<"ApiCallLog", 'Int'>
  readonly errorMessage: Prisma.FieldRef<"ApiCallLog", 'String'>
  readonly errorStack: Prisma.FieldRef<"ApiCallLog", 'String'>
  readonly headers: Prisma.FieldRef<"ApiCallLog", 'Json'>
  readonly metadata: Prisma.FieldRef<"ApiCallLog", 'Json'>
  readonly createdAt: Prisma.FieldRef<"ApiCallLog", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ApiCallLog findUnique
 */
export type ApiCallLogFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiCallLog
   */
  select?: Prisma.ApiCallLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApiCallLog
   */
  omit?: Prisma.ApiCallLogOmit<ExtArgs> | null
  /**
   * Filter, which ApiCallLog to fetch.
   */
  where: Prisma.ApiCallLogWhereUniqueInput
}

/**
 * ApiCallLog findUniqueOrThrow
 */
export type ApiCallLogFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiCallLog
   */
  select?: Prisma.ApiCallLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApiCallLog
   */
  omit?: Prisma.ApiCallLogOmit<ExtArgs> | null
  /**
   * Filter, which ApiCallLog to fetch.
   */
  where: Prisma.ApiCallLogWhereUniqueInput
}

/**
 * ApiCallLog findFirst
 */
export type ApiCallLogFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiCallLog
   */
  select?: Prisma.ApiCallLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApiCallLog
   */
  omit?: Prisma.ApiCallLogOmit<ExtArgs> | null
  /**
   * Filter, which ApiCallLog to fetch.
   */
  where?: Prisma.ApiCallLogWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ApiCallLogs to fetch.
   */
  orderBy?: Prisma.ApiCallLogOrderByWithRelationInput | Prisma.ApiCallLogOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ApiCallLogs.
   */
  cursor?: Prisma.ApiCallLogWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ApiCallLogs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ApiCallLogs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ApiCallLogs.
   */
  distinct?: Prisma.ApiCallLogScalarFieldEnum | Prisma.ApiCallLogScalarFieldEnum[]
}

/**
 * ApiCallLog findFirstOrThrow
 */
export type ApiCallLogFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiCallLog
   */
  select?: Prisma.ApiCallLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApiCallLog
   */
  omit?: Prisma.ApiCallLogOmit<ExtArgs> | null
  /**
   * Filter, which ApiCallLog to fetch.
   */
  where?: Prisma.ApiCallLogWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ApiCallLogs to fetch.
   */
  orderBy?: Prisma.ApiCallLogOrderByWithRelationInput | Prisma.ApiCallLogOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ApiCallLogs.
   */
  cursor?: Prisma.ApiCallLogWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ApiCallLogs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ApiCallLogs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ApiCallLogs.
   */
  distinct?: Prisma.ApiCallLogScalarFieldEnum | Prisma.ApiCallLogScalarFieldEnum[]
}

/**
 * ApiCallLog findMany
 */
export type ApiCallLogFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiCallLog
   */
  select?: Prisma.ApiCallLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApiCallLog
   */
  omit?: Prisma.ApiCallLogOmit<ExtArgs> | null
  /**
   * Filter, which ApiCallLogs to fetch.
   */
  where?: Prisma.ApiCallLogWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ApiCallLogs to fetch.
   */
  orderBy?: Prisma.ApiCallLogOrderByWithRelationInput | Prisma.ApiCallLogOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ApiCallLogs.
   */
  cursor?: Prisma.ApiCallLogWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ApiCallLogs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ApiCallLogs.
   */
  skip?: number
  distinct?: Prisma.ApiCallLogScalarFieldEnum | Prisma.ApiCallLogScalarFieldEnum[]
}

/**
 * ApiCallLog create
 */
export type ApiCallLogCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiCallLog
   */
  select?: Prisma.ApiCallLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApiCallLog
   */
  omit?: Prisma.ApiCallLogOmit<ExtArgs> | null
  /**
   * The data needed to create a ApiCallLog.
   */
  data: Prisma.XOR<Prisma.ApiCallLogCreateInput, Prisma.ApiCallLogUncheckedCreateInput>
}

/**
 * ApiCallLog createMany
 */
export type ApiCallLogCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ApiCallLogs.
   */
  data: Prisma.ApiCallLogCreateManyInput | Prisma.ApiCallLogCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ApiCallLog createManyAndReturn
 */
export type ApiCallLogCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiCallLog
   */
  select?: Prisma.ApiCallLogSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ApiCallLog
   */
  omit?: Prisma.ApiCallLogOmit<ExtArgs> | null
  /**
   * The data used to create many ApiCallLogs.
   */
  data: Prisma.ApiCallLogCreateManyInput | Prisma.ApiCallLogCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ApiCallLog update
 */
export type ApiCallLogUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiCallLog
   */
  select?: Prisma.ApiCallLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApiCallLog
   */
  omit?: Prisma.ApiCallLogOmit<ExtArgs> | null
  /**
   * The data needed to update a ApiCallLog.
   */
  data: Prisma.XOR<Prisma.ApiCallLogUpdateInput, Prisma.ApiCallLogUncheckedUpdateInput>
  /**
   * Choose, which ApiCallLog to update.
   */
  where: Prisma.ApiCallLogWhereUniqueInput
}

/**
 * ApiCallLog updateMany
 */
export type ApiCallLogUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ApiCallLogs.
   */
  data: Prisma.XOR<Prisma.ApiCallLogUpdateManyMutationInput, Prisma.ApiCallLogUncheckedUpdateManyInput>
  /**
   * Filter which ApiCallLogs to update
   */
  where?: Prisma.ApiCallLogWhereInput
  /**
   * Limit how many ApiCallLogs to update.
   */
  limit?: number
}

/**
 * ApiCallLog updateManyAndReturn
 */
export type ApiCallLogUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiCallLog
   */
  select?: Prisma.ApiCallLogSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ApiCallLog
   */
  omit?: Prisma.ApiCallLogOmit<ExtArgs> | null
  /**
   * The data used to update ApiCallLogs.
   */
  data: Prisma.XOR<Prisma.ApiCallLogUpdateManyMutationInput, Prisma.ApiCallLogUncheckedUpdateManyInput>
  /**
   * Filter which ApiCallLogs to update
   */
  where?: Prisma.ApiCallLogWhereInput
  /**
   * Limit how many ApiCallLogs to update.
   */
  limit?: number
}

/**
 * ApiCallLog upsert
 */
export type ApiCallLogUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiCallLog
   */
  select?: Prisma.ApiCallLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApiCallLog
   */
  omit?: Prisma.ApiCallLogOmit<ExtArgs> | null
  /**
   * The filter to search for the ApiCallLog to update in case it exists.
   */
  where: Prisma.ApiCallLogWhereUniqueInput
  /**
   * In case the ApiCallLog found by the `where` argument doesn't exist, create a new ApiCallLog with this data.
   */
  create: Prisma.XOR<Prisma.ApiCallLogCreateInput, Prisma.ApiCallLogUncheckedCreateInput>
  /**
   * In case the ApiCallLog was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ApiCallLogUpdateInput, Prisma.ApiCallLogUncheckedUpdateInput>
}

/**
 * ApiCallLog delete
 */
export type ApiCallLogDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiCallLog
   */
  select?: Prisma.ApiCallLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApiCallLog
   */
  omit?: Prisma.ApiCallLogOmit<ExtArgs> | null
  /**
   * Filter which ApiCallLog to delete.
   */
  where: Prisma.ApiCallLogWhereUniqueInput
}

/**
 * ApiCallLog deleteMany
 */
export type ApiCallLogDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ApiCallLogs to delete
   */
  where?: Prisma.ApiCallLogWhereInput
  /**
   * Limit how many ApiCallLogs to delete.
   */
  limit?: number
}

/**
 * ApiCallLog without action
 */
export type ApiCallLogDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiCallLog
   */
  select?: Prisma.ApiCallLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApiCallLog
   */
  omit?: Prisma.ApiCallLogOmit<ExtArgs> | null
}
