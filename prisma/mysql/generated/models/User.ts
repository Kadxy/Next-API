
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `User` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model User
 * 
 */
export type UserModel = runtime.Types.Result.DefaultSelection<Prisma.$UserPayload>

export type AggregateUser = {
  _count: UserCountAggregateOutputType | null
  _avg: UserAvgAggregateOutputType | null
  _sum: UserSumAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

export type UserAvgAggregateOutputType = {
  id: number | null
}

export type UserSumAggregateOutputType = {
  id: number | null
}

export type UserMinAggregateOutputType = {
  id: number | null
  uid: string | null
  displayName: string | null
  avatar: string | null
  email: string | null
  phone: string | null
  gitHubId: string | null
  googleId: string | null
  feishuId: string | null
  isDeleted: boolean | null
  isAdmin: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
  lastLoginAt: Date | null
}

export type UserMaxAggregateOutputType = {
  id: number | null
  uid: string | null
  displayName: string | null
  avatar: string | null
  email: string | null
  phone: string | null
  gitHubId: string | null
  googleId: string | null
  feishuId: string | null
  isDeleted: boolean | null
  isAdmin: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
  lastLoginAt: Date | null
}

export type UserCountAggregateOutputType = {
  id: number
  uid: number
  displayName: number
  avatar: number
  email: number
  phone: number
  gitHubId: number
  googleId: number
  feishuId: number
  isDeleted: number
  isAdmin: number
  createdAt: number
  updatedAt: number
  lastLoginAt: number
  _all: number
}


export type UserAvgAggregateInputType = {
  id?: true
}

export type UserSumAggregateInputType = {
  id?: true
}

export type UserMinAggregateInputType = {
  id?: true
  uid?: true
  displayName?: true
  avatar?: true
  email?: true
  phone?: true
  gitHubId?: true
  googleId?: true
  feishuId?: true
  isDeleted?: true
  isAdmin?: true
  createdAt?: true
  updatedAt?: true
  lastLoginAt?: true
}

export type UserMaxAggregateInputType = {
  id?: true
  uid?: true
  displayName?: true
  avatar?: true
  email?: true
  phone?: true
  gitHubId?: true
  googleId?: true
  feishuId?: true
  isDeleted?: true
  isAdmin?: true
  createdAt?: true
  updatedAt?: true
  lastLoginAt?: true
}

export type UserCountAggregateInputType = {
  id?: true
  uid?: true
  displayName?: true
  avatar?: true
  email?: true
  phone?: true
  gitHubId?: true
  googleId?: true
  feishuId?: true
  isDeleted?: true
  isAdmin?: true
  createdAt?: true
  updatedAt?: true
  lastLoginAt?: true
  _all?: true
}

export type UserAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which User to aggregate.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Users
  **/
  _count?: true | UserCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: UserAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: UserSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UserMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UserMaxAggregateInputType
}

export type GetUserAggregateType<T extends UserAggregateArgs> = {
      [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUser[P]>
    : Prisma.GetScalarType<T[P], AggregateUser[P]>
}




export type UserGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserWhereInput
  orderBy?: Prisma.UserOrderByWithAggregationInput | Prisma.UserOrderByWithAggregationInput[]
  by: Prisma.UserScalarFieldEnum[] | Prisma.UserScalarFieldEnum
  having?: Prisma.UserScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UserCountAggregateInputType | true
  _avg?: UserAvgAggregateInputType
  _sum?: UserSumAggregateInputType
  _min?: UserMinAggregateInputType
  _max?: UserMaxAggregateInputType
}

export type UserGroupByOutputType = {
  id: number
  uid: string
  displayName: string | null
  avatar: string | null
  email: string | null
  phone: string | null
  gitHubId: string | null
  googleId: string | null
  feishuId: string | null
  isDeleted: boolean
  isAdmin: boolean
  createdAt: Date
  updatedAt: Date
  lastLoginAt: Date | null
  _count: UserCountAggregateOutputType | null
  _avg: UserAvgAggregateOutputType | null
  _sum: UserSumAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
      }
    >
  > 



export type UserWhereInput = {
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  id?: Prisma.IntFilter<"User"> | number
  uid?: Prisma.StringFilter<"User"> | string
  displayName?: Prisma.StringNullableFilter<"User"> | string | null
  avatar?: Prisma.StringNullableFilter<"User"> | string | null
  email?: Prisma.StringNullableFilter<"User"> | string | null
  phone?: Prisma.StringNullableFilter<"User"> | string | null
  gitHubId?: Prisma.StringNullableFilter<"User"> | string | null
  googleId?: Prisma.StringNullableFilter<"User"> | string | null
  feishuId?: Prisma.StringNullableFilter<"User"> | string | null
  isDeleted?: Prisma.BoolFilter<"User"> | boolean
  isAdmin?: Prisma.BoolFilter<"User"> | boolean
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string
  lastLoginAt?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  wallet?: Prisma.WalletListRelationFilter
  walletMembers?: Prisma.WalletMemberListRelationFilter
  passkeys?: Prisma.PasskeyListRelationFilter
  redeemCodes?: Prisma.RedemptionCodeListRelationFilter
  createdApiKeys?: Prisma.ApiKeyListRelationFilter
}

export type UserOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  uid?: Prisma.SortOrder
  displayName?: Prisma.SortOrderInput | Prisma.SortOrder
  avatar?: Prisma.SortOrderInput | Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  phone?: Prisma.SortOrderInput | Prisma.SortOrder
  gitHubId?: Prisma.SortOrderInput | Prisma.SortOrder
  googleId?: Prisma.SortOrderInput | Prisma.SortOrder
  feishuId?: Prisma.SortOrderInput | Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isAdmin?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  lastLoginAt?: Prisma.SortOrderInput | Prisma.SortOrder
  wallet?: Prisma.WalletOrderByRelationAggregateInput
  walletMembers?: Prisma.WalletMemberOrderByRelationAggregateInput
  passkeys?: Prisma.PasskeyOrderByRelationAggregateInput
  redeemCodes?: Prisma.RedemptionCodeOrderByRelationAggregateInput
  createdApiKeys?: Prisma.ApiKeyOrderByRelationAggregateInput
  _relevance?: Prisma.UserOrderByRelevanceInput
}

export type UserWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  uid?: string
  email?: string
  phone?: string
  gitHubId?: string
  googleId?: string
  feishuId?: string
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  displayName?: Prisma.StringNullableFilter<"User"> | string | null
  avatar?: Prisma.StringNullableFilter<"User"> | string | null
  isDeleted?: Prisma.BoolFilter<"User"> | boolean
  isAdmin?: Prisma.BoolFilter<"User"> | boolean
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string
  lastLoginAt?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  wallet?: Prisma.WalletListRelationFilter
  walletMembers?: Prisma.WalletMemberListRelationFilter
  passkeys?: Prisma.PasskeyListRelationFilter
  redeemCodes?: Prisma.RedemptionCodeListRelationFilter
  createdApiKeys?: Prisma.ApiKeyListRelationFilter
}, "id" | "uid" | "email" | "phone" | "gitHubId" | "googleId" | "feishuId">

export type UserOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  uid?: Prisma.SortOrder
  displayName?: Prisma.SortOrderInput | Prisma.SortOrder
  avatar?: Prisma.SortOrderInput | Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  phone?: Prisma.SortOrderInput | Prisma.SortOrder
  gitHubId?: Prisma.SortOrderInput | Prisma.SortOrder
  googleId?: Prisma.SortOrderInput | Prisma.SortOrder
  feishuId?: Prisma.SortOrderInput | Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isAdmin?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  lastLoginAt?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.UserCountOrderByAggregateInput
  _avg?: Prisma.UserAvgOrderByAggregateInput
  _max?: Prisma.UserMaxOrderByAggregateInput
  _min?: Prisma.UserMinOrderByAggregateInput
  _sum?: Prisma.UserSumOrderByAggregateInput
}

export type UserScalarWhereWithAggregatesInput = {
  AND?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  OR?: Prisma.UserScalarWhereWithAggregatesInput[]
  NOT?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"User"> | number
  uid?: Prisma.StringWithAggregatesFilter<"User"> | string
  displayName?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  avatar?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  email?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  phone?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  gitHubId?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  googleId?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  feishuId?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  isDeleted?: Prisma.BoolWithAggregatesFilter<"User"> | boolean
  isAdmin?: Prisma.BoolWithAggregatesFilter<"User"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
  lastLoginAt?: Prisma.DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
}

export type UserCreateInput = {
  uid?: string
  displayName?: string | null
  avatar?: string | null
  email?: string | null
  phone?: string | null
  gitHubId?: string | null
  googleId?: string | null
  feishuId?: string | null
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  lastLoginAt?: Date | string | null
  wallet?: Prisma.WalletCreateNestedManyWithoutOwnerInput
  walletMembers?: Prisma.WalletMemberCreateNestedManyWithoutUserInput
  passkeys?: Prisma.PasskeyCreateNestedManyWithoutUserInput
  redeemCodes?: Prisma.RedemptionCodeCreateNestedManyWithoutRedeemerInput
  createdApiKeys?: Prisma.ApiKeyCreateNestedManyWithoutCreatorInput
}

export type UserUncheckedCreateInput = {
  id?: number
  uid?: string
  displayName?: string | null
  avatar?: string | null
  email?: string | null
  phone?: string | null
  gitHubId?: string | null
  googleId?: string | null
  feishuId?: string | null
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  lastLoginAt?: Date | string | null
  wallet?: Prisma.WalletUncheckedCreateNestedManyWithoutOwnerInput
  walletMembers?: Prisma.WalletMemberUncheckedCreateNestedManyWithoutUserInput
  passkeys?: Prisma.PasskeyUncheckedCreateNestedManyWithoutUserInput
  redeemCodes?: Prisma.RedemptionCodeUncheckedCreateNestedManyWithoutRedeemerInput
  createdApiKeys?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutCreatorInput
}

export type UserUpdateInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wallet?: Prisma.WalletUpdateManyWithoutOwnerNestedInput
  walletMembers?: Prisma.WalletMemberUpdateManyWithoutUserNestedInput
  passkeys?: Prisma.PasskeyUpdateManyWithoutUserNestedInput
  redeemCodes?: Prisma.RedemptionCodeUpdateManyWithoutRedeemerNestedInput
  createdApiKeys?: Prisma.ApiKeyUpdateManyWithoutCreatorNestedInput
}

export type UserUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wallet?: Prisma.WalletUncheckedUpdateManyWithoutOwnerNestedInput
  walletMembers?: Prisma.WalletMemberUncheckedUpdateManyWithoutUserNestedInput
  passkeys?: Prisma.PasskeyUncheckedUpdateManyWithoutUserNestedInput
  redeemCodes?: Prisma.RedemptionCodeUncheckedUpdateManyWithoutRedeemerNestedInput
  createdApiKeys?: Prisma.ApiKeyUncheckedUpdateManyWithoutCreatorNestedInput
}

export type UserCreateManyInput = {
  id?: number
  uid?: string
  displayName?: string | null
  avatar?: string | null
  email?: string | null
  phone?: string | null
  gitHubId?: string | null
  googleId?: string | null
  feishuId?: string | null
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  lastLoginAt?: Date | string | null
}

export type UserUpdateManyMutationInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type UserUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type UserOrderByRelevanceInput = {
  fields: Prisma.UserOrderByRelevanceFieldEnum | Prisma.UserOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type UserCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  uid?: Prisma.SortOrder
  displayName?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  email?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  gitHubId?: Prisma.SortOrder
  googleId?: Prisma.SortOrder
  feishuId?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isAdmin?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  lastLoginAt?: Prisma.SortOrder
}

export type UserAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type UserMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  uid?: Prisma.SortOrder
  displayName?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  email?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  gitHubId?: Prisma.SortOrder
  googleId?: Prisma.SortOrder
  feishuId?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isAdmin?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  lastLoginAt?: Prisma.SortOrder
}

export type UserMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  uid?: Prisma.SortOrder
  displayName?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  email?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  gitHubId?: Prisma.SortOrder
  googleId?: Prisma.SortOrder
  feishuId?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isAdmin?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  lastLoginAt?: Prisma.SortOrder
}

export type UserSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type UserScalarRelationFilter = {
  is?: Prisma.UserWhereInput
  isNot?: Prisma.UserWhereInput
}

export type UserNullableScalarRelationFilter = {
  is?: Prisma.UserWhereInput | null
  isNot?: Prisma.UserWhereInput | null
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type UserCreateNestedOneWithoutWalletInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutWalletInput, Prisma.UserUncheckedCreateWithoutWalletInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutWalletInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutWalletNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutWalletInput, Prisma.UserUncheckedCreateWithoutWalletInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutWalletInput
  upsert?: Prisma.UserUpsertWithoutWalletInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutWalletInput, Prisma.UserUpdateWithoutWalletInput>, Prisma.UserUncheckedUpdateWithoutWalletInput>
}

export type UserCreateNestedOneWithoutWalletMembersInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutWalletMembersInput, Prisma.UserUncheckedCreateWithoutWalletMembersInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutWalletMembersInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutWalletMembersNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutWalletMembersInput, Prisma.UserUncheckedCreateWithoutWalletMembersInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutWalletMembersInput
  upsert?: Prisma.UserUpsertWithoutWalletMembersInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutWalletMembersInput, Prisma.UserUpdateWithoutWalletMembersInput>, Prisma.UserUncheckedUpdateWithoutWalletMembersInput>
}

export type UserCreateNestedOneWithoutCreatedApiKeysInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutCreatedApiKeysInput, Prisma.UserUncheckedCreateWithoutCreatedApiKeysInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedApiKeysInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutCreatedApiKeysNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutCreatedApiKeysInput, Prisma.UserUncheckedCreateWithoutCreatedApiKeysInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedApiKeysInput
  upsert?: Prisma.UserUpsertWithoutCreatedApiKeysInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutCreatedApiKeysInput, Prisma.UserUpdateWithoutCreatedApiKeysInput>, Prisma.UserUncheckedUpdateWithoutCreatedApiKeysInput>
}

export type UserCreateNestedOneWithoutPasskeysInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutPasskeysInput, Prisma.UserUncheckedCreateWithoutPasskeysInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPasskeysInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutPasskeysNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutPasskeysInput, Prisma.UserUncheckedCreateWithoutPasskeysInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPasskeysInput
  upsert?: Prisma.UserUpsertWithoutPasskeysInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutPasskeysInput, Prisma.UserUpdateWithoutPasskeysInput>, Prisma.UserUncheckedUpdateWithoutPasskeysInput>
}

export type UserCreateNestedOneWithoutRedeemCodesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRedeemCodesInput, Prisma.UserUncheckedCreateWithoutRedeemCodesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRedeemCodesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneWithoutRedeemCodesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRedeemCodesInput, Prisma.UserUncheckedCreateWithoutRedeemCodesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRedeemCodesInput
  upsert?: Prisma.UserUpsertWithoutRedeemCodesInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutRedeemCodesInput, Prisma.UserUpdateWithoutRedeemCodesInput>, Prisma.UserUncheckedUpdateWithoutRedeemCodesInput>
}

export type UserCreateWithoutWalletInput = {
  uid?: string
  displayName?: string | null
  avatar?: string | null
  email?: string | null
  phone?: string | null
  gitHubId?: string | null
  googleId?: string | null
  feishuId?: string | null
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  lastLoginAt?: Date | string | null
  walletMembers?: Prisma.WalletMemberCreateNestedManyWithoutUserInput
  passkeys?: Prisma.PasskeyCreateNestedManyWithoutUserInput
  redeemCodes?: Prisma.RedemptionCodeCreateNestedManyWithoutRedeemerInput
  createdApiKeys?: Prisma.ApiKeyCreateNestedManyWithoutCreatorInput
}

export type UserUncheckedCreateWithoutWalletInput = {
  id?: number
  uid?: string
  displayName?: string | null
  avatar?: string | null
  email?: string | null
  phone?: string | null
  gitHubId?: string | null
  googleId?: string | null
  feishuId?: string | null
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  lastLoginAt?: Date | string | null
  walletMembers?: Prisma.WalletMemberUncheckedCreateNestedManyWithoutUserInput
  passkeys?: Prisma.PasskeyUncheckedCreateNestedManyWithoutUserInput
  redeemCodes?: Prisma.RedemptionCodeUncheckedCreateNestedManyWithoutRedeemerInput
  createdApiKeys?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutCreatorInput
}

export type UserCreateOrConnectWithoutWalletInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutWalletInput, Prisma.UserUncheckedCreateWithoutWalletInput>
}

export type UserUpsertWithoutWalletInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutWalletInput, Prisma.UserUncheckedUpdateWithoutWalletInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutWalletInput, Prisma.UserUncheckedCreateWithoutWalletInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutWalletInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutWalletInput, Prisma.UserUncheckedUpdateWithoutWalletInput>
}

export type UserUpdateWithoutWalletInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  walletMembers?: Prisma.WalletMemberUpdateManyWithoutUserNestedInput
  passkeys?: Prisma.PasskeyUpdateManyWithoutUserNestedInput
  redeemCodes?: Prisma.RedemptionCodeUpdateManyWithoutRedeemerNestedInput
  createdApiKeys?: Prisma.ApiKeyUpdateManyWithoutCreatorNestedInput
}

export type UserUncheckedUpdateWithoutWalletInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  walletMembers?: Prisma.WalletMemberUncheckedUpdateManyWithoutUserNestedInput
  passkeys?: Prisma.PasskeyUncheckedUpdateManyWithoutUserNestedInput
  redeemCodes?: Prisma.RedemptionCodeUncheckedUpdateManyWithoutRedeemerNestedInput
  createdApiKeys?: Prisma.ApiKeyUncheckedUpdateManyWithoutCreatorNestedInput
}

export type UserCreateWithoutWalletMembersInput = {
  uid?: string
  displayName?: string | null
  avatar?: string | null
  email?: string | null
  phone?: string | null
  gitHubId?: string | null
  googleId?: string | null
  feishuId?: string | null
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  lastLoginAt?: Date | string | null
  wallet?: Prisma.WalletCreateNestedManyWithoutOwnerInput
  passkeys?: Prisma.PasskeyCreateNestedManyWithoutUserInput
  redeemCodes?: Prisma.RedemptionCodeCreateNestedManyWithoutRedeemerInput
  createdApiKeys?: Prisma.ApiKeyCreateNestedManyWithoutCreatorInput
}

export type UserUncheckedCreateWithoutWalletMembersInput = {
  id?: number
  uid?: string
  displayName?: string | null
  avatar?: string | null
  email?: string | null
  phone?: string | null
  gitHubId?: string | null
  googleId?: string | null
  feishuId?: string | null
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  lastLoginAt?: Date | string | null
  wallet?: Prisma.WalletUncheckedCreateNestedManyWithoutOwnerInput
  passkeys?: Prisma.PasskeyUncheckedCreateNestedManyWithoutUserInput
  redeemCodes?: Prisma.RedemptionCodeUncheckedCreateNestedManyWithoutRedeemerInput
  createdApiKeys?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutCreatorInput
}

export type UserCreateOrConnectWithoutWalletMembersInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutWalletMembersInput, Prisma.UserUncheckedCreateWithoutWalletMembersInput>
}

export type UserUpsertWithoutWalletMembersInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutWalletMembersInput, Prisma.UserUncheckedUpdateWithoutWalletMembersInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutWalletMembersInput, Prisma.UserUncheckedCreateWithoutWalletMembersInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutWalletMembersInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutWalletMembersInput, Prisma.UserUncheckedUpdateWithoutWalletMembersInput>
}

export type UserUpdateWithoutWalletMembersInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wallet?: Prisma.WalletUpdateManyWithoutOwnerNestedInput
  passkeys?: Prisma.PasskeyUpdateManyWithoutUserNestedInput
  redeemCodes?: Prisma.RedemptionCodeUpdateManyWithoutRedeemerNestedInput
  createdApiKeys?: Prisma.ApiKeyUpdateManyWithoutCreatorNestedInput
}

export type UserUncheckedUpdateWithoutWalletMembersInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wallet?: Prisma.WalletUncheckedUpdateManyWithoutOwnerNestedInput
  passkeys?: Prisma.PasskeyUncheckedUpdateManyWithoutUserNestedInput
  redeemCodes?: Prisma.RedemptionCodeUncheckedUpdateManyWithoutRedeemerNestedInput
  createdApiKeys?: Prisma.ApiKeyUncheckedUpdateManyWithoutCreatorNestedInput
}

export type UserCreateWithoutCreatedApiKeysInput = {
  uid?: string
  displayName?: string | null
  avatar?: string | null
  email?: string | null
  phone?: string | null
  gitHubId?: string | null
  googleId?: string | null
  feishuId?: string | null
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  lastLoginAt?: Date | string | null
  wallet?: Prisma.WalletCreateNestedManyWithoutOwnerInput
  walletMembers?: Prisma.WalletMemberCreateNestedManyWithoutUserInput
  passkeys?: Prisma.PasskeyCreateNestedManyWithoutUserInput
  redeemCodes?: Prisma.RedemptionCodeCreateNestedManyWithoutRedeemerInput
}

export type UserUncheckedCreateWithoutCreatedApiKeysInput = {
  id?: number
  uid?: string
  displayName?: string | null
  avatar?: string | null
  email?: string | null
  phone?: string | null
  gitHubId?: string | null
  googleId?: string | null
  feishuId?: string | null
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  lastLoginAt?: Date | string | null
  wallet?: Prisma.WalletUncheckedCreateNestedManyWithoutOwnerInput
  walletMembers?: Prisma.WalletMemberUncheckedCreateNestedManyWithoutUserInput
  passkeys?: Prisma.PasskeyUncheckedCreateNestedManyWithoutUserInput
  redeemCodes?: Prisma.RedemptionCodeUncheckedCreateNestedManyWithoutRedeemerInput
}

export type UserCreateOrConnectWithoutCreatedApiKeysInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutCreatedApiKeysInput, Prisma.UserUncheckedCreateWithoutCreatedApiKeysInput>
}

export type UserUpsertWithoutCreatedApiKeysInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutCreatedApiKeysInput, Prisma.UserUncheckedUpdateWithoutCreatedApiKeysInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutCreatedApiKeysInput, Prisma.UserUncheckedCreateWithoutCreatedApiKeysInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutCreatedApiKeysInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutCreatedApiKeysInput, Prisma.UserUncheckedUpdateWithoutCreatedApiKeysInput>
}

export type UserUpdateWithoutCreatedApiKeysInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wallet?: Prisma.WalletUpdateManyWithoutOwnerNestedInput
  walletMembers?: Prisma.WalletMemberUpdateManyWithoutUserNestedInput
  passkeys?: Prisma.PasskeyUpdateManyWithoutUserNestedInput
  redeemCodes?: Prisma.RedemptionCodeUpdateManyWithoutRedeemerNestedInput
}

export type UserUncheckedUpdateWithoutCreatedApiKeysInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wallet?: Prisma.WalletUncheckedUpdateManyWithoutOwnerNestedInput
  walletMembers?: Prisma.WalletMemberUncheckedUpdateManyWithoutUserNestedInput
  passkeys?: Prisma.PasskeyUncheckedUpdateManyWithoutUserNestedInput
  redeemCodes?: Prisma.RedemptionCodeUncheckedUpdateManyWithoutRedeemerNestedInput
}

export type UserCreateWithoutPasskeysInput = {
  uid?: string
  displayName?: string | null
  avatar?: string | null
  email?: string | null
  phone?: string | null
  gitHubId?: string | null
  googleId?: string | null
  feishuId?: string | null
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  lastLoginAt?: Date | string | null
  wallet?: Prisma.WalletCreateNestedManyWithoutOwnerInput
  walletMembers?: Prisma.WalletMemberCreateNestedManyWithoutUserInput
  redeemCodes?: Prisma.RedemptionCodeCreateNestedManyWithoutRedeemerInput
  createdApiKeys?: Prisma.ApiKeyCreateNestedManyWithoutCreatorInput
}

export type UserUncheckedCreateWithoutPasskeysInput = {
  id?: number
  uid?: string
  displayName?: string | null
  avatar?: string | null
  email?: string | null
  phone?: string | null
  gitHubId?: string | null
  googleId?: string | null
  feishuId?: string | null
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  lastLoginAt?: Date | string | null
  wallet?: Prisma.WalletUncheckedCreateNestedManyWithoutOwnerInput
  walletMembers?: Prisma.WalletMemberUncheckedCreateNestedManyWithoutUserInput
  redeemCodes?: Prisma.RedemptionCodeUncheckedCreateNestedManyWithoutRedeemerInput
  createdApiKeys?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutCreatorInput
}

export type UserCreateOrConnectWithoutPasskeysInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutPasskeysInput, Prisma.UserUncheckedCreateWithoutPasskeysInput>
}

export type UserUpsertWithoutPasskeysInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutPasskeysInput, Prisma.UserUncheckedUpdateWithoutPasskeysInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutPasskeysInput, Prisma.UserUncheckedCreateWithoutPasskeysInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutPasskeysInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutPasskeysInput, Prisma.UserUncheckedUpdateWithoutPasskeysInput>
}

export type UserUpdateWithoutPasskeysInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wallet?: Prisma.WalletUpdateManyWithoutOwnerNestedInput
  walletMembers?: Prisma.WalletMemberUpdateManyWithoutUserNestedInput
  redeemCodes?: Prisma.RedemptionCodeUpdateManyWithoutRedeemerNestedInput
  createdApiKeys?: Prisma.ApiKeyUpdateManyWithoutCreatorNestedInput
}

export type UserUncheckedUpdateWithoutPasskeysInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wallet?: Prisma.WalletUncheckedUpdateManyWithoutOwnerNestedInput
  walletMembers?: Prisma.WalletMemberUncheckedUpdateManyWithoutUserNestedInput
  redeemCodes?: Prisma.RedemptionCodeUncheckedUpdateManyWithoutRedeemerNestedInput
  createdApiKeys?: Prisma.ApiKeyUncheckedUpdateManyWithoutCreatorNestedInput
}

export type UserCreateWithoutRedeemCodesInput = {
  uid?: string
  displayName?: string | null
  avatar?: string | null
  email?: string | null
  phone?: string | null
  gitHubId?: string | null
  googleId?: string | null
  feishuId?: string | null
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  lastLoginAt?: Date | string | null
  wallet?: Prisma.WalletCreateNestedManyWithoutOwnerInput
  walletMembers?: Prisma.WalletMemberCreateNestedManyWithoutUserInput
  passkeys?: Prisma.PasskeyCreateNestedManyWithoutUserInput
  createdApiKeys?: Prisma.ApiKeyCreateNestedManyWithoutCreatorInput
}

export type UserUncheckedCreateWithoutRedeemCodesInput = {
  id?: number
  uid?: string
  displayName?: string | null
  avatar?: string | null
  email?: string | null
  phone?: string | null
  gitHubId?: string | null
  googleId?: string | null
  feishuId?: string | null
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  lastLoginAt?: Date | string | null
  wallet?: Prisma.WalletUncheckedCreateNestedManyWithoutOwnerInput
  walletMembers?: Prisma.WalletMemberUncheckedCreateNestedManyWithoutUserInput
  passkeys?: Prisma.PasskeyUncheckedCreateNestedManyWithoutUserInput
  createdApiKeys?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutCreatorInput
}

export type UserCreateOrConnectWithoutRedeemCodesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutRedeemCodesInput, Prisma.UserUncheckedCreateWithoutRedeemCodesInput>
}

export type UserUpsertWithoutRedeemCodesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutRedeemCodesInput, Prisma.UserUncheckedUpdateWithoutRedeemCodesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutRedeemCodesInput, Prisma.UserUncheckedCreateWithoutRedeemCodesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutRedeemCodesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutRedeemCodesInput, Prisma.UserUncheckedUpdateWithoutRedeemCodesInput>
}

export type UserUpdateWithoutRedeemCodesInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wallet?: Prisma.WalletUpdateManyWithoutOwnerNestedInput
  walletMembers?: Prisma.WalletMemberUpdateManyWithoutUserNestedInput
  passkeys?: Prisma.PasskeyUpdateManyWithoutUserNestedInput
  createdApiKeys?: Prisma.ApiKeyUpdateManyWithoutCreatorNestedInput
}

export type UserUncheckedUpdateWithoutRedeemCodesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  uid?: Prisma.StringFieldUpdateOperationsInput | string
  displayName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gitHubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  feishuId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLoginAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wallet?: Prisma.WalletUncheckedUpdateManyWithoutOwnerNestedInput
  walletMembers?: Prisma.WalletMemberUncheckedUpdateManyWithoutUserNestedInput
  passkeys?: Prisma.PasskeyUncheckedUpdateManyWithoutUserNestedInput
  createdApiKeys?: Prisma.ApiKeyUncheckedUpdateManyWithoutCreatorNestedInput
}


/**
 * Count Type UserCountOutputType
 */

export type UserCountOutputType = {
  wallet: number
  walletMembers: number
  passkeys: number
  redeemCodes: number
  createdApiKeys: number
}

export type UserCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  wallet?: boolean | UserCountOutputTypeCountWalletArgs
  walletMembers?: boolean | UserCountOutputTypeCountWalletMembersArgs
  passkeys?: boolean | UserCountOutputTypeCountPasskeysArgs
  redeemCodes?: boolean | UserCountOutputTypeCountRedeemCodesArgs
  createdApiKeys?: boolean | UserCountOutputTypeCountCreatedApiKeysArgs
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserCountOutputType
   */
  select?: Prisma.UserCountOutputTypeSelect<ExtArgs> | null
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountWalletArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WalletWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountWalletMembersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WalletMemberWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountPasskeysArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PasskeyWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountRedeemCodesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.RedemptionCodeWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountCreatedApiKeysArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ApiKeyWhereInput
}


export type UserSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  uid?: boolean
  displayName?: boolean
  avatar?: boolean
  email?: boolean
  phone?: boolean
  gitHubId?: boolean
  googleId?: boolean
  feishuId?: boolean
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  lastLoginAt?: boolean
  wallet?: boolean | Prisma.User$walletArgs<ExtArgs>
  walletMembers?: boolean | Prisma.User$walletMembersArgs<ExtArgs>
  passkeys?: boolean | Prisma.User$passkeysArgs<ExtArgs>
  redeemCodes?: boolean | Prisma.User$redeemCodesArgs<ExtArgs>
  createdApiKeys?: boolean | Prisma.User$createdApiKeysArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["user"]>



export type UserSelectScalar = {
  id?: boolean
  uid?: boolean
  displayName?: boolean
  avatar?: boolean
  email?: boolean
  phone?: boolean
  gitHubId?: boolean
  googleId?: boolean
  feishuId?: boolean
  isDeleted?: boolean
  isAdmin?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  lastLoginAt?: boolean
}

export type UserOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "uid" | "displayName" | "avatar" | "email" | "phone" | "gitHubId" | "googleId" | "feishuId" | "isDeleted" | "isAdmin" | "createdAt" | "updatedAt" | "lastLoginAt", ExtArgs["result"]["user"]>
export type UserInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  wallet?: boolean | Prisma.User$walletArgs<ExtArgs>
  walletMembers?: boolean | Prisma.User$walletMembersArgs<ExtArgs>
  passkeys?: boolean | Prisma.User$passkeysArgs<ExtArgs>
  redeemCodes?: boolean | Prisma.User$redeemCodesArgs<ExtArgs>
  createdApiKeys?: boolean | Prisma.User$createdApiKeysArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}

export type $UserPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "User"
  objects: {
    wallet: Prisma.$WalletPayload<ExtArgs>[]
    walletMembers: Prisma.$WalletMemberPayload<ExtArgs>[]
    passkeys: Prisma.$PasskeyPayload<ExtArgs>[]
    redeemCodes: Prisma.$RedemptionCodePayload<ExtArgs>[]
    createdApiKeys: Prisma.$ApiKeyPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    uid: string
    displayName: string | null
    avatar: string | null
    email: string | null
    phone: string | null
    gitHubId: string | null
    googleId: string | null
    feishuId: string | null
    isDeleted: boolean
    isAdmin: boolean
    createdAt: Date
    updatedAt: Date
    lastLoginAt: Date | null
  }, ExtArgs["result"]["user"]>
  composites: {}
}

export type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$UserPayload, S>

export type UserCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: UserCountAggregateInputType | true
  }

export interface UserDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
  /**
   * Find zero or one User that matches the filter.
   * @param {UserFindUniqueArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserFindUniqueArgs>(args: Prisma.SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one User that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserFindFirstArgs>(args?: Prisma.SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Users
   * const users = await prisma.user.findMany()
   * 
   * // Get first 10 Users
   * const users = await prisma.user.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends UserFindManyArgs>(args?: Prisma.SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a User.
   * @param {UserCreateArgs} args - Arguments to create a User.
   * @example
   * // Create one User
   * const User = await prisma.user.create({
   *   data: {
   *     // ... data to create a User
   *   }
   * })
   * 
   */
  create<T extends UserCreateArgs>(args: Prisma.SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Users.
   * @param {UserCreateManyArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends UserCreateManyArgs>(args?: Prisma.SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a User.
   * @param {UserDeleteArgs} args - Arguments to delete one User.
   * @example
   * // Delete one User
   * const User = await prisma.user.delete({
   *   where: {
   *     // ... filter to delete one User
   *   }
   * })
   * 
   */
  delete<T extends UserDeleteArgs>(args: Prisma.SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one User.
   * @param {UserUpdateArgs} args - Arguments to update one User.
   * @example
   * // Update one User
   * const user = await prisma.user.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends UserUpdateArgs>(args: Prisma.SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Users.
   * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
   * @example
   * // Delete a few Users
   * const { count } = await prisma.user.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends UserDeleteManyArgs>(args?: Prisma.SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends UserUpdateManyArgs>(args: Prisma.SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one User.
   * @param {UserUpsertArgs} args - Arguments to update or create a User.
   * @example
   * // Update or create a User
   * const user = await prisma.user.upsert({
   *   create: {
   *     // ... data to create a User
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the User we want to update
   *   }
   * })
   */
  upsert<T extends UserUpsertArgs>(args: Prisma.SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserCountArgs} args - Arguments to filter Users to count.
   * @example
   * // Count the number of Users
   * const count = await prisma.user.count({
   *   where: {
   *     // ... the filter for the Users we want to count
   *   }
   * })
  **/
  count<T extends UserCountArgs>(
    args?: Prisma.Subset<T, UserCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UserCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UserAggregateArgs>(args: Prisma.Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

  /**
   * Group by User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends UserGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserGroupByArgs['orderBy'] }
      : { orderBy?: UserGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the User model
 */
readonly fields: UserFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for User.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  wallet<T extends Prisma.User$walletArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$walletArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  walletMembers<T extends Prisma.User$walletMembersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$walletMembersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WalletMemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  passkeys<T extends Prisma.User$passkeysArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$passkeysArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PasskeyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  redeemCodes<T extends Prisma.User$redeemCodesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$redeemCodesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RedemptionCodePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  createdApiKeys<T extends Prisma.User$createdApiKeysArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$createdApiKeysArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the User model
 */
export interface UserFieldRefs {
  readonly id: Prisma.FieldRef<"User", 'Int'>
  readonly uid: Prisma.FieldRef<"User", 'String'>
  readonly displayName: Prisma.FieldRef<"User", 'String'>
  readonly avatar: Prisma.FieldRef<"User", 'String'>
  readonly email: Prisma.FieldRef<"User", 'String'>
  readonly phone: Prisma.FieldRef<"User", 'String'>
  readonly gitHubId: Prisma.FieldRef<"User", 'String'>
  readonly googleId: Prisma.FieldRef<"User", 'String'>
  readonly feishuId: Prisma.FieldRef<"User", 'String'>
  readonly isDeleted: Prisma.FieldRef<"User", 'Boolean'>
  readonly isAdmin: Prisma.FieldRef<"User", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"User", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"User", 'DateTime'>
  readonly lastLoginAt: Prisma.FieldRef<"User", 'DateTime'>
}
    

// Custom InputTypes
/**
 * User findUnique
 */
export type UserFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findUniqueOrThrow
 */
export type UserFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findFirst
 */
export type UserFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findFirstOrThrow
 */
export type UserFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findMany
 */
export type UserFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which Users to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User create
 */
export type UserCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to create a User.
   */
  data: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
}

/**
 * User createMany
 */
export type UserCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User update
 */
export type UserUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to update a User.
   */
  data: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
  /**
   * Choose, which User to update.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User updateMany
 */
export type UserUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User upsert
 */
export type UserUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The filter to search for the User to update in case it exists.
   */
  where: Prisma.UserWhereUniqueInput
  /**
   * In case the User found by the `where` argument doesn't exist, create a new User with this data.
   */
  create: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
  /**
   * In case the User was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
}

/**
 * User delete
 */
export type UserDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter which User to delete.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User deleteMany
 */
export type UserDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Users to delete
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to delete.
   */
  limit?: number
}

/**
 * User.wallet
 */
export type User$walletArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Wallet
   */
  select?: Prisma.WalletSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Wallet
   */
  omit?: Prisma.WalletOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WalletInclude<ExtArgs> | null
  where?: Prisma.WalletWhereInput
  orderBy?: Prisma.WalletOrderByWithRelationInput | Prisma.WalletOrderByWithRelationInput[]
  cursor?: Prisma.WalletWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WalletScalarFieldEnum | Prisma.WalletScalarFieldEnum[]
}

/**
 * User.walletMembers
 */
export type User$walletMembersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WalletMember
   */
  select?: Prisma.WalletMemberSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WalletMember
   */
  omit?: Prisma.WalletMemberOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WalletMemberInclude<ExtArgs> | null
  where?: Prisma.WalletMemberWhereInput
  orderBy?: Prisma.WalletMemberOrderByWithRelationInput | Prisma.WalletMemberOrderByWithRelationInput[]
  cursor?: Prisma.WalletMemberWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WalletMemberScalarFieldEnum | Prisma.WalletMemberScalarFieldEnum[]
}

/**
 * User.passkeys
 */
export type User$passkeysArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Passkey
   */
  select?: Prisma.PasskeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Passkey
   */
  omit?: Prisma.PasskeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PasskeyInclude<ExtArgs> | null
  where?: Prisma.PasskeyWhereInput
  orderBy?: Prisma.PasskeyOrderByWithRelationInput | Prisma.PasskeyOrderByWithRelationInput[]
  cursor?: Prisma.PasskeyWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PasskeyScalarFieldEnum | Prisma.PasskeyScalarFieldEnum[]
}

/**
 * User.redeemCodes
 */
export type User$redeemCodesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RedemptionCode
   */
  select?: Prisma.RedemptionCodeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RedemptionCode
   */
  omit?: Prisma.RedemptionCodeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RedemptionCodeInclude<ExtArgs> | null
  where?: Prisma.RedemptionCodeWhereInput
  orderBy?: Prisma.RedemptionCodeOrderByWithRelationInput | Prisma.RedemptionCodeOrderByWithRelationInput[]
  cursor?: Prisma.RedemptionCodeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.RedemptionCodeScalarFieldEnum | Prisma.RedemptionCodeScalarFieldEnum[]
}

/**
 * User.createdApiKeys
 */
export type User$createdApiKeysArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyInclude<ExtArgs> | null
  where?: Prisma.ApiKeyWhereInput
  orderBy?: Prisma.ApiKeyOrderByWithRelationInput | Prisma.ApiKeyOrderByWithRelationInput[]
  cursor?: Prisma.ApiKeyWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ApiKeyScalarFieldEnum | Prisma.ApiKeyScalarFieldEnum[]
}

/**
 * User without action
 */
export type UserDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
}
