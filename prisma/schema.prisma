generator client {
  provider = "prisma-client"
  output   = "./generated"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

// 用户表
model User {
  id             Int              @id @default(autoincrement())
  uid            String           @unique @default(uuid())
  displayName    String?          @db.VarChar(32)
  avatar         String?          @db.Text
  email          String?          @unique
  phone          String?          @unique
  gitHubId       String?          @unique
  googleId       String?          @unique
  isActive       Boolean          @default(true)
  isDeleted      Boolean          @default(false)
  isAdmin        Boolean          @default(false)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  lastLoginAt    DateTime?
  wallet         Wallet? // 拥有的钱包（一对一）
  walletMembers  WalletMember[] // 作为成员加入的钱包
  passkeys       Passkey[]
  redeemCodes    RedemptionCode[]
  createdApiKeys ApiKey[] // 创建的API Keys

  @@map("users")
}

// 钱包表 - 核心资产容器
model Wallet {
  id        Int            @id @default(autoincrement())
  uid       String         @unique @default(uuid())
  balance   Decimal        @default(0) @db.Decimal(12, 6)
  version   Int            @default(1) // 乐观锁
  owner     User           @relation(fields: [ownerId], references: [id])
  ownerId   Int            @unique
  members   WalletMember[] // 钱包成员
  apiKeys   ApiKey[] // 使用此钱包的API Keys
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  @@map("wallets")
}

// 钱包成员表
model WalletMember {
  id              Int       @id @default(autoincrement())
  wallet          Wallet    @relation(fields: [walletId], references: [id])
  walletId        Int
  user            User      @relation(fields: [userId], references: [id])
  userId          Int
  creditLimit     Decimal   @db.Decimal(12, 6) // 信用额度
  creditAvailable Decimal   @db.Decimal(12, 6) // 可用额度
  creditUsed      Decimal   @default(0) @db.Decimal(12, 6) // 历史总消费（不重置）
  isActive        Boolean   @default(true)
  joinedAt        DateTime  @default(now())
  leftAt          DateTime?
  updatedAt       DateTime  @updatedAt

  @@unique([walletId, userId])
  @@index([userId, isActive])
  @@index([walletId, isActive])
  @@map("wallet_members")
}

// API密钥表
model ApiKey {
  id          Int       @id @default(autoincrement())
  wallet      Wallet    @relation(fields: [walletId], references: [id])
  walletId    Int
  creator     User      @relation(fields: [creatorId], references: [id])
  creatorId   Int
  hashKey     String    @unique @db.VarChar(64)
  preview     String    @db.VarChar(8)
  displayName String    @db.VarChar(32)
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  lastUsedAt  DateTime?

  @@index([hashKey, isActive])
  @@index([walletId, isActive])
  @@index([creatorId, isActive])
  @@map("api_keys")
}

model Passkey {
  id             String    @id @unique @db.VarChar(255)
  publicKey      Bytes
  webAuthnUserID String    @db.VarChar(255)
  counter        BigInt    @default(0)
  displayName    String    @default("")
  transports     String?   @db.VarChar(255)
  deviceType     String    @default("singleDevice") @db.VarChar(32)
  backedUp       Boolean   @default(false)
  isDeleted      Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  lastUsedAt     DateTime?
  user           User      @relation(fields: [userId], references: [id])
  userId         Int

  @@unique([webAuthnUserID, userId])
  @@index([id])
  @@index([userId, isDeleted])
  @@index([id, userId, isDeleted])
  @@index([webAuthnUserID])
  @@map("passkeys")
}

model RedemptionCode {
  id         Int       @id @default(autoincrement())
  code       String    @unique @db.VarChar(16)
  amount     Int       @db.Int
  remark     String    @default("")
  createdAt  DateTime  @default(now())
  expiredAt  DateTime?
  redeemedAt DateTime?
  redeemerId Int?
  redeemer   User?     @relation(fields: [redeemerId], references: [id])

  @@map("redeem_codes")
}
