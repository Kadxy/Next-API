generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  uid       String   @unique @default(uuid())
  
  displayName String? // Common name for user's display name (not username which implies uniqueness)
  avatar    String?

  email     String?   @unique
  phone     String?  @unique
  githubId  String?  @unique
  googleId  String?  @unique
  appleId   String?  @unique
  
  // 2FA support
  twoFactorEnabled Boolean @default(false)
  twoFactorSecret  String?
  
  // User status
  isActive  Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  passkeys  Passkey[]
  wallet    Wallet?

  @@map("users")
}

model Passkey {
  id          Int      @id @default(autoincrement())

  credentialId String   @unique
  publicKey    String
  counter      Int      @default(0)
  
  name         String?  // Optional name for the passkey
  lastUsed     DateTime?
  
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  @@index([userId])
  @@map("passkeys")
}

model Wallet {
  id        Int      @id @default(autoincrement())
  balance   Decimal  @default(0) @db.Decimal(12, 6) // 余额，精确到小数点后6位
  version   Int      @default(1) // 乐观锁版本号，用于并发控制
  updatedAt DateTime @updatedAt

  // 关联字段
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  @@map("wallets")
}

